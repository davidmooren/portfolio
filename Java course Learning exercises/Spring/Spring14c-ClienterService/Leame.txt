Idea extraida de
https://www.dineshonjava.com/microservices-with-spring-boot/


PASOS
=======
1) Creating Discovery Service (Creating Eureka Discovery Service)
2) Creating MicroService (the Producer)
	2a) Register itself with Discovery Service with logical service.
3) Create Microservice Consumers find Service registered with Discovery Service
	3a) Discovery client using a smart RestTemplate to find microservice.


PASO 03 - Consumer Service
===========================
- Create Consumers to find the Producer Service registered with Discovery Service at Step 1.
- @EnableDiscoveryClient annotation also allows us to query Discovery server to find microservices.

Start with
http://localhost:8080/accountList



Este ser치 un cliente MVC

Los cambios principales
- Cliente es MVC .. no es REST
- Accounts y resto de piezas se parecen
- Se incluyen p치ginas JSP para mostrar informacion
- El POM emplea  el Jasper y el tomcat

El cambio m치s grande se produce en la clase Remote AccountRepository
Mientas que en el REST se obtenian valores de un repo, aqui se obtienen valores de un servicio REST
Este servicio Rest est치 dado de alta en Eureka


Load Balancing with Ribbon
Our smart RestTemplate automatically integrates two Netflix utilities

Eureka Service Discovery
Ribbon Client Side Load Balancer
Eureka returns the URL of all available instances
Ribbon determine the best available service too use


